on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      artifacts_run_id:
        required: false
        type: string
        default: ${{ github.run_id }}
      artifacts_repository:
        required: false
        type: string
        default: ${{ github.repository }}
      catboost_package_name:
        required: false
        type: string
        default: catboost
      is_test_env:
        required: false
        type: boolean
        default: false

jobs:
  publish_widget:
    if: false
    name: Publish catboost-widget on NPM
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Env setup
        shell: pwsh
        run: New-Item -Path built_widget -ItemType Directory

      - name: Download catboost python package visualization widget
        uses: actions/download-artifact@v4
        with:
          name: catboost-python-package-widget-v${{ inputs.version }}
          path: built_widget/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          always-auth: true
          scope: '@andrei_khropov'
      
      - name: Publish catboost-widget npm package
        run: |
          cd ${{ github.workspace }}/built_widget
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish_python_package:
    if: false
    name: Publish Python package to PyPI
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.is_test_env && 'testpypi' || 'pypi' }}
      url: https://${{ inputs.is_test_env && 'test.pypi.org' || 'pypi.org' }}/p/${{ inputs.catboost_package_name }}

    permissions:
      id-token: write

    steps:
      - name: Download python package dists
        uses: actions/download-artifact@v4
        with:
          pattern: catboost-python-package-dist-*
          merge-multiple: true
          path: dist/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}

      - if: ${{ ! inputs.is_test_env }}
        name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - if: ${{ inputs.is_test_env }}
        name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish_jvm_catboost_common:
    if: false
    name: Publish catboost-common package to Maven Central
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: catboost
          ref: ${{ inputs.version }}
          sparse-checkout: catboost/jvm-packages/common

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'maven'
          cache-dependency-path: |
            catboost/catboost/jvm-packages/common/pom.xml
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Publish package
        run: |
          export GPG_TTY=$(tty)
          cd ${{ github.workspace }}/catboost/catboost/jvm-packages/common
          mvn --batch-mode clean deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

  publish_jvm_catboost_prediction:
    name: Publish catboost-prediction package to Maven Central
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: catboost
          ref: ${{ inputs.version }}
          sparse-checkout: |
            catboost/jvm-packages/catboost4j-prediction
            catboost/jvm-packages/tools

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'maven'
          cache-dependency-path: |
            catboost/catboost/jvm-packages/catboost4j-prediction/pom.xml
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Env setup
        shell: pwsh
        run: |
          New-Item -Path prebuilt/catboost4j-prediction_resources -ItemType Directory

      - name: Download catboost4j-prediction_resources
        uses: actions/download-artifact@v4
        with:
          pattern: catboost4j-prediction_resources-*
          merge-multiple: true
          path: prebuilt/catboost4j-prediction_resources/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ inputs.artifacts_repository }}
          run-id: ${{ inputs.artifacts_run_id }}

      - name: Publish package
        run: |
          export GPG_TTY=$(tty)
          ls -lR ${{ github.workspace }}/prebuilt/catboost4j-prediction_resources/
          cd ${{ github.workspace }}/catboost/catboost/jvm-packages/catboost4j-prediction
          mvn -D"prebuilt.native.resources.dir"=${{ github.workspace }}/prebuilt/catboost4j-prediction_resources/ test
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}