{% if isProtoLibrary -%}
import com.google.protobuf.gradle.*

val buildProtoDir = File("${buildDir}", "__proto__")

plugins {
    id("java")
    id("com.google.protobuf") version "0.8.19"
}

repositories {
    mavenCentral()
}

dependencies {
{% for library in targets[0].consumer_classpath -%}
    implementation({{ library }})
{% endfor -%}

{% if targets[0].proto_namespace is defined -%}
    protobuf(files(File(buildProtoDir, "{{ targets[0].proto_namespace[0] }}")))
{% else -%}
    protobuf(files(buildProtoDir))
{% endif -%}
}

val prepareProto = tasks.register<Copy>("prepareProto") {
    from(rootDir) {
{% for proto in targets[0].proto_files -%}
        include("{{ proto }}")
{% endfor -%}
    }
    into(buildProtoDir)
}

afterEvaluate {
    tasks.getByName("extractProto").dependsOn(prepareProto)
}
{% else -%}
plugins {
    `java-library`
}

repositories {
    mavenCentral()
}

dependencies{
{% if hasTest -%}
    testImplementation("org.junit.jupiter:junit-jupiter:5.8.2")

    api("org.apache.commons:commons-math3:3.6.1")

    implementation("com.google.guava:guava:31.0.1-jre")
{% endif -%}
{% for target in targets -%}
{% for library in target.consumer_classpath -%}
{% if target.isTest -%}
    testImplementation({{ library }})
{% else -%}
    implementation({{ library }})
{% endif -%}
{% endfor -%}
{% endfor -%}
}

{% if hasTest -%}
tasks.named<Test>("test") {
    useJUnitPlatform()
}
{% endif -%}
{% endif -%}
